from utils import positive_int_check, float_check
from methods import *
from math import sqrt, sin
import numpy as np
import sympy as sp

#–í–∞—Ä–∏–∞–Ω—Ç 3
# [ùëé, ùëè] = [0, 1], ùëì(ùë•) = sin(ùë•), ùúå(ùë•) = 1 / sqrt(x)

function_string = "sin(x)"
weight_function_string = "1 / sqrt(x)"

def function(x):
    return sin(x)

def weight_function(x):
    return 1 / sqrt(x)

# 6. –°–¥–µ–ª–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —Ç–æ—á–Ω–æ—Å—Ç—å –ò–ö–§ –Ω–∞ –º–Ω–æ–≥–æ—á–ª–µ–Ω–µ —Å—Ç–µ–ø–µ–Ω–∏ ùëÅ ‚àí 1, –µ—Å–ª–∏ 
# —á–∏—Å–ª–æ —É–∑–ª–æ–≤ –ö–§ —Ä–∞–≤–Ω–æ ùëÅ. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç—Ä–∞–∑–∏—Ç—å –Ω–∞ —ç–∫—Ä–∞–Ω–µ.

# 7. –í—ã–≤–µ—Å—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞–ª–∞, –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –ø—Ä–∏ –ø–æ–º–æ—â–∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π –ò–ö–§
# (–Ω–µ –º–µ–Ω–µ–µ 12 –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π). 

# 8. –°—Ä–∞–≤–Ω–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –ø—Ä–∏ –ø–æ–º–æ—â–∏ –ò–ö–§ –∑–Ω–∞—á–µ–Ω–∏–µ —Å "—Ç–æ—á–Ω—ã–º" –∑–Ω–∞—á–µ–Ω–∏–µ–º –∏–∑ 
# –º–∞—Ç–ø–∞–∫–µ—Ç–∞

print("\n–ü—Ä–∏–±–ª–∏–∂—ë–Ω–Ω–æ–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞–ª–æ–≤ –ø—Ä–∏ –ø–æ–º–æ—â–∏ –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏–æ–Ω–Ω—ã—Ö –∫–≤–∞–¥—Ä–∞—Ç—É—Ä–Ω—ã—Ö —Ñ–æ—Ä–º—É–ª\n")
down_border = float_check("–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∂–Ω—é—é –≥—Ä–∞–Ω–∏—Ü—É –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∏—è => ")
up_border = float_check("–í–≤–µ–¥–∏—Ç–µ –≤–µ—Ä—Ö–Ω—é—é –≥—Ä–∞–Ω–∏—Ü—É –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∏—è => ")

print(f'"–¢–æ—á–Ω–æ–µ" –∑–Ω–∞—á–µ–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞–ª–∞ –ø–æ –æ—Ç—Ä–µ–∑–∫—É [{down_border}, {up_border}]',
      f'–¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ ({function_string}) * ({weight_function_string}) = {get_value_of_integral(down_border, up_border)}')

count_of_points = positive_int_check("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–∑–ª–æ–≤ => ")
print("–í–≤–æ–¥–∏—Ç–µ –ø–æ–ø–∞—Ä–Ω–æ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —É–∑–ª—ã: ")
set_of_points = set()
for i in range(count_of_points):
    point = float_check(f'"x{i+1}" = ')
    try:
        previous_length = len(set_of_points)
    except (TypeError):
        previous_length = 0

    set_of_points.add(point)
    current_length = len(set_of_points)

    while previous_length == current_length:
        print("–¢–∞–∫–æ–π —É–∑–µ–ª —É–∂–µ –µ—Å—Ç—å, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥!")
        point = float_check(f'"x{i+1}" = ')
        set_of_points.add(point)
        current_length = len(set_of_points)

list_of_points = list(set_of_points)
coefficients = get_list_of_coefficients(weight_function, down_border, up_border, list_of_points)

for i in range(count_of_points):
    print(f"–î–ª—è —Ç–æ—á–∫–∏ - {list_of_points[i]} –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç - {coefficients[i]}")
